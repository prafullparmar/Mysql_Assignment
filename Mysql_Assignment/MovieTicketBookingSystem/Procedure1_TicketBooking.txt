CREATE DEFINER=`root`@`localhost` PROCEDURE `TicketBooking`(IN CNAME VARCHAR(45),
                                                                     IN EMAIL VARCHAR(45),
                                                                              IN MOVIENAME VARCHAR(45),
                                                                                           IN THEATRENAME VARCHAR(45),
                                                                                                          IN SHOWTIME DATETIME,
                                                                                                             IN TICKETCOUNT INT, OUT PRICE INT, OUT TSTATUS VARCHAR(45)) BEGIN DECLARE CUSTID INT; DECLARE MOVIEID INT; DECLARE THEATREID INT; DECLARE SCREENID INT; DECLARE SHOWID INT; DECLARE AVAILSEATS INT; DECLARE TICKETPRICE INT; IF EXISTS
  (SELECT *
   FROM CUSTOMER AS C
   WHERE CustName = CNAME
     AND C.EMAIL = EMAIL ) THEN
SELECT C.CUSTID INTO CUSTID
FROM CUSTOMER AS C
WHERE CustName = CNAME
  AND C.EMAIL = EMAIL; IF EXISTS
    (SELECT *
     FROM MOVIE AS M
     WHERE M.MOVIENAME = MOVIENAME) THEN
  SELECT M.MOVIEID INTO MOVIEID
  FROM MOVIE AS M
  WHERE M.MOVIENAME = MOVIENAME
  LIMIT 1; IF EXISTS
    (SELECT *
     FROM THEATRE AS T
     WHERE T.THEATRENAME = THEATRENAME) THEN
  SELECT T.THEATREID INTO THEATREID
  FROM THEATRE AS T
  WHERE T.THEATRENAME = THEATRENAME; IF EXISTS
      (SELECT *
       FROM SHOWS AS S
       WHERE S.SHOWTIMING = SHOWTIME
         AND S.MOVIEID = MOVIEID ) THEN
    SELECT S.SCREENID INTO SCREENID
    FROM SHOWS AS S
    INNER JOIN SCREEN AS SC ON SC.SCREENID =S.SCREENID
    WHERE S.SHOWTIMING = SHOWTIME
      AND SC.THEATREID=THEATREID
      AND S.MOVIEID=MOVIEID;
      SELECT S.SHOWID INTO SHOWID
    FROM SHOWS AS S
    WHERE S.SHOWTIMING = SHOWTIME
      AND S.SCREENID = SCREENID
      AND S.MOVIEID=MOVIEID;
      SELECT " " AS "BOOKED!";
      SELECT AVAILABLESEATS INTO AVAILSEATS
    FROM SHOWS AS S
    WHERE S.SHOWID = SHOWID; IF (AVAILSEATS>= TICKETCOUNT) THEN
      SET TSTATUS = "UNSUCCESSFUL";
      START TRANSACTION;
      SET AVAILSEATS = AVAILSEATS -TICKETCOUNT;
      SELECT S.PRICE INTO TICKETPRICE
      FROM SHOWS AS S
      WHERE S.SHOWID = SHOWID;
        SET TSTATUS = "CONFIRMED";
        SET PRICE = TICKETPRICE*TICKETCOUNT;
        INSERT INTO TICKET
      VALUES(NULL,
             CUSTID,
             TICKETCOUNT,
             PRICE,
             TSTATUS,
             SHOWID);
      UPDATE SHOWS
      SET AVAILABLESEATS = AVAILSEATS
      WHERE SHOWS.SHOWID = SHOWID;
        SELECT CONCAT("TICKET PRICE:", TICKETPRICE, "\nTOTAL PRICE: ", PRICE, " \nSTATUS: ", TSTATUS) AS "SEATS ARE BOOKED!";
        COMMIT; ELSE
        SELECT CONCAT(TICKETCOUNT, " SEATS ARE NOT AVAILABLE!") AS ""; END IF; ELSE
      SELECT "INVALID SHOW TIME!" AS ""; END IF; ELSE
    SELECT "INVALID THEATRE NAME!" AS ""; END IF; ELSE
  SELECT "INVALID MOVIE NAME!" AS ""; END IF; #   SELECT "VALID CREDENTIALS" AS "";(CUSTID,TICKETCOUNT,PRICE,STATUS,SHOWID)
 ELSE
  SELECT "CUSTOMER CREDENTIALS INVALID!" AS " "; END IF; END